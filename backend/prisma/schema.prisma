generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Artists {
  id                       Int                       @id
  name                     String?
  real_name                String?
  profile                  String?
  data_quality             String?
  full_data                Json?

  artist_aliases           ArtistAliases[]
  artist_groups            ArtistGroups[]
  artist_members           ArtistMembers[]
  artist_name_variations   ArtistNameVariations[]
  artist_urls              ArtistUrls[]
}

model ArtistUrls {
  id         Int       @id @default(autoincrement())
  artist_id  Int?
  url        String?

  artists    Artists?  @relation(fields: [artist_id], references: [id], onDelete: SetNull)

  @@index([artist_id])
}

model ArtistAliases {
  id         Int       @id @default(autoincrement())
  artist_id  Int?
  alias_name String?

  artists    Artists?  @relation(fields: [artist_id], references: [id], onDelete: SetNull)

  @@index([artist_id])
}

model ArtistNameVariations {
  id         Int       @id @default(autoincrement())
  artist_id  Int?
  variation  String?

  artists    Artists?  @relation(fields: [artist_id], references: [id], onDelete: SetNull)

  @@index([artist_id])
}

model ArtistMembers {
  id           Int       @id @default(autoincrement())
  artist_id    Int?
  member_name  String?

  artists      Artists?  @relation(fields: [artist_id], references: [id], onDelete: SetNull)

  @@index([artist_id])
}

model ArtistGroups {
  id          Int       @id @default(autoincrement())
  artist_id   Int?
  group_name  String?

  artists     Artists?  @relation(fields: [artist_id], references: [id], onDelete: SetNull)

  @@index([artist_id])
}
